// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"mobile-backend-boilerplate/pkg/helper/utils"
)

type NavLink struct {
	Href     string
	HxGet    string
	HxTarget string
	Name     string
}

var navLinks = []NavLink{
	NavLink{
		Href:     "/",
		HxGet:    "/",
		HxTarget: "#content",
		Name:     "Главная",
	},
	NavLink{
		Href:     "/about",
		HxGet:    "/about",
		HxTarget: "#content",
		Name:     "Обо мне",
	},
	NavLink{
		Href:     "/projects",
		HxGet:    "/projects",
		HxTarget: "#content",
		Name:     "Проекты",
	},
	NavLink{
		Href:     "/blog",
		HxGet:    "/blog",
		HxTarget: "#content",
		Name:     "Блог",
	},
	NavLink{
		Href:     "/contact",
		HxGet:    "/contact",
		HxTarget: "#content",
		Name:     "Связаться",
	},
}

func Navigation(currentPath string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n        .navbar {\n            position: fixed;\n            top: 1rem;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 100;\n\t\t\toverflow: hidden;\n\n            width: 95svw;\n            max-width: 720px;\n\t\t\tbackground: color-mix(in oklch, var(--muted) 80%, transparent);\n            border-radius: var(--radius-full);\n\t\t\tbackdrop-filter: blur(4px);\n\n\t\t\tbox-shadow: var(--shadow-md);\n        }\n\n        .nav-links {\n            overflow: auto;\n            display: flex;\n            flex-direction: row;\n            gap: 1rem;\n            transition: max-height 0.3s ease;\n            padding: var(--space-xs) var(--space-xs);\n        }\n\n        .nav-links a {\n            text-decoration: none;\n            color: inherit;\n            font-size: 1rem;\n            flex-shrink: 0;\n\n            padding: var(--space-sm) var(--space-md);\n            border-radius: var(--radius-full);\n\t\t\tcolor: var(--foreground);\n\n\t\t\tflex: 1;\n  \t\t\ttext-align: center;\n\t\t\tmin-width: fit-content;\n        }\n\n\t\t.nav-links a.active {\n\t\t\tbackground: color-mix(in oklch, var(--background) 80%, transparent);\n\t\t\tbackdrop-filter: blur(4px);\n\t\t}\n    </style><div class=\"navbar\" id=\"navbar\"><div class=\"nav-links\" id=\"nav-links\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, navLink := range navLinks {
			var templ_7745c5c3_Var2 = []any{fmt.Sprintf("nav-link %s", utils.IfElse(navLink.Href == currentPath, "active", ""))}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 templ.SafeURL
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinURLErrs(navLink.Href)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/view/partials/navigation.templ`, Line: 100, Col: 24}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(navLink.HxGet)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/view/partials/navigation.templ`, Line: 101, Col: 27}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" hx-target=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(navLink.HxTarget)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/view/partials/navigation.templ`, Line: 102, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" hx-swap=\"innerHTML\" hx-push-url=\"true\" class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/view/partials/navigation.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(navLink.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/view/partials/navigation.templ`, Line: 107, Col: 19}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div></div><script>\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            const navbar = document.getElementById(\"navbar\");\n            const toggle = document.getElementById(\"navbar-toggle\");\n\n            if (!navbar || !toggle) return;\n\n            toggle.addEventListener(\"click\", () => {\n                navbar.classList.toggle(\"open\");\n            });\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
